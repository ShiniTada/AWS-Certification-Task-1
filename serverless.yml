service: AWS-Certification-Task-1
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs12.x

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
          Resource:
            - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ordersTable
        - Effect: Allow
          Action:
            - kinesis:PutRecord
          Resource:
            - !Sub arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/order-events
        - Effect: Allow
          Action:
            - ses:SendEmail
          Resource:
            - "*"
          Condition:
            StringEquals:
              ses:FromAddress:
                - Yana_Bahdanovich@mail.ru
                - Yana_Bahdanovich@epam.com
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource:
            - !Sub arn:aws:sqs:${AWS::Region}::${AWS::AccountId}:deliveryServiceQueue

functions:
  createOrder:
    handler: handler.createOrder
    events:
      - http:
          path: /order
          method: post
    environment:
      orderTableName: ordersTable
      orderStreamName: order-events
  fulfillOrder:
    handler: handler.fulfillOrder
    events:
      - http:
          path: /order/fulfilled
          method: post
    environment:
      orderTableName: ordersTable
      orderStreamName: order-events
  notifyExternalParties:
    handler: handler.notifyExternalParties
    events:
      - stream:
          # does not support !Sub =(
          arn: arn:aws:kinesis:us-east-1:846910419469:stream/order-events
    environment:
      region: us-east-1
      orderingSystemEmail: Yana_Bahdanovich@mail.ru
      cakeMakerEmail: Yana_Bahdanovich@epam.com
      deliveryCompanyQueue:
        Ref: deliveryServiceQueue
      orderTableName: ordersTable
  notifyDeliveryCompany:
    handler: handler.notifyDeliveryCompany
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - deliveryServiceQueue
              - Arn
          batchSize: 1


resources:
  Resources:
    # CloudFormation stream name
    orderEventsStream:
      Type: AWS::Kinesis::Stream
      Properties:
        # Kinesis stream name
        Name: order-events
        ShardCount: 1
    orderTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ordersTable
        AttributeDefinitions:
          - AttributeName: "orderId"
            AttributeType: "S"
        # Define "orderId" as key
        KeySchema:
          - AttributeName: "orderId"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
    deliveryServiceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: deliveryServiceQueue

